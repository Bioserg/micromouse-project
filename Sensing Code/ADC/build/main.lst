ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB43:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** uint16_t adc_value;
  48:Core/Src/main.c **** uint8_t channel = 0;
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 3


  90:Core/Src/main.c ****   MX_ADC_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****     adc_set_channel(channel);
 103:Core/Src/main.c ****     HAL_Delay(1);
 104:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 105:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 106:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 107:Core/Src/main.c ****     if(channel == 0) {
 108:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 109:Core/Src/main.c ****       channel = 1;
 110:Core/Src/main.c ****     } else {
 111:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,RESET);
 112:Core/Src/main.c ****       channel = 0;
 113:Core/Src/main.c ****     }
 114:Core/Src/main.c ****     HAL_GPIO_WritePin(LED0_GPIO_Port,LED0_Pin,SET);
 115:Core/Src/main.c ****     HAL_Delay(5000);
 116:Core/Src/main.c ****     HAL_GPIO_WritePin(LED0_GPIO_Port,LED0_Pin,RESET);
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 4


 147:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 159:Core/Src/main.c **** void adc_set_channel(uint8_t num) {
 160:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****     if (num>0) {
 163:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 164:Core/Src/main.c ****     } else {
 165:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_6;
 166:Core/Src/main.c ****     }
 167:Core/Src/main.c ****     sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 168:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 169:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 170:Core/Src/main.c ****     {
 171:Core/Src/main.c ****       Error_Handler();
 172:Core/Src/main.c ****     }
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** /* USER CODE END 4 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /**
 177:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 178:Core/Src/main.c ****   * @retval None
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c **** void Error_Handler(void)
 181:Core/Src/main.c **** {
  27              		.loc 1 181 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 183:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 184:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 184 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 5


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 6


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 7


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax divided
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
  47              	.LBE5:
  48              	.LBE4:
 185:Core/Src/main.c ****   while (1)
  49              		.loc 1 185 3 discriminator 1 view .LVU4
 186:Core/Src/main.c ****   {
 187:Core/Src/main.c ****   }
  50              		.loc 1 187 3 discriminator 1 view .LVU5
 185:Core/Src/main.c ****   while (1)
  51              		.loc 1 185 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE43:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.code	16
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB41:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 126 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 64
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 8


  72              		.cfi_offset 14, -4
  73 0002 90B0     		sub	sp, sp, #64
  74              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  75              		.loc 1 127 3 view .LVU8
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  76              		.loc 1 127 22 is_stmt 0 view .LVU9
  77 0004 3022     		movs	r2, #48
  78 0006 0021     		movs	r1, #0
  79 0008 04A8     		add	r0, sp, #16
  80 000a FFF7FEFF 		bl	memset
  81              	.LVL0:
 128:Core/Src/main.c **** 
  82              		.loc 1 128 3 is_stmt 1 view .LVU10
 128:Core/Src/main.c **** 
  83              		.loc 1 128 22 is_stmt 0 view .LVU11
  84 000e 1024     		movs	r4, #16
  85 0010 1022     		movs	r2, #16
  86 0012 0021     		movs	r1, #0
  87 0014 6846     		mov	r0, sp
  88 0016 FFF7FEFF 		bl	memset
  89              	.LVL1:
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  90              		.loc 1 133 3 is_stmt 1 view .LVU12
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  91              		.loc 1 133 36 is_stmt 0 view .LVU13
  92 001a 1223     		movs	r3, #18
  93 001c 0493     		str	r3, [sp, #16]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  94              		.loc 1 134 3 is_stmt 1 view .LVU14
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  95              		.loc 1 134 30 is_stmt 0 view .LVU15
  96 001e 113B     		subs	r3, r3, #17
  97 0020 0793     		str	r3, [sp, #28]
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  98              		.loc 1 135 3 is_stmt 1 view .LVU16
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  99              		.loc 1 135 32 is_stmt 0 view .LVU17
 100 0022 0993     		str	r3, [sp, #36]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 101              		.loc 1 136 3 is_stmt 1 view .LVU18
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 102              		.loc 1 136 41 is_stmt 0 view .LVU19
 103 0024 0894     		str	r4, [sp, #32]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 104              		.loc 1 137 3 is_stmt 1 view .LVU20
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 105              		.loc 1 137 43 is_stmt 0 view .LVU21
 106 0026 0A94     		str	r4, [sp, #40]
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 138 3 is_stmt 1 view .LVU22
 139:Core/Src/main.c ****   {
 108              		.loc 1 139 3 view .LVU23
 139:Core/Src/main.c ****   {
 109              		.loc 1 139 7 is_stmt 0 view .LVU24
 110 0028 04A8     		add	r0, sp, #16
 111 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 9


 112              	.LVL2:
 139:Core/Src/main.c ****   {
 113              		.loc 1 139 6 view .LVU25
 114 002e 0028     		cmp	r0, #0
 115 0030 0DD1     		bne	.L6
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 116              		.loc 1 146 3 is_stmt 1 view .LVU26
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 117              		.loc 1 146 31 is_stmt 0 view .LVU27
 118 0032 0723     		movs	r3, #7
 119 0034 0093     		str	r3, [sp]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 120              		.loc 1 148 3 is_stmt 1 view .LVU28
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 121              		.loc 1 148 34 is_stmt 0 view .LVU29
 122 0036 0023     		movs	r3, #0
 123 0038 0193     		str	r3, [sp, #4]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 124              		.loc 1 149 3 is_stmt 1 view .LVU30
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 125              		.loc 1 149 35 is_stmt 0 view .LVU31
 126 003a 0293     		str	r3, [sp, #8]
 150:Core/Src/main.c **** 
 127              		.loc 1 150 3 is_stmt 1 view .LVU32
 150:Core/Src/main.c **** 
 128              		.loc 1 150 36 is_stmt 0 view .LVU33
 129 003c 0393     		str	r3, [sp, #12]
 152:Core/Src/main.c ****   {
 130              		.loc 1 152 3 is_stmt 1 view .LVU34
 152:Core/Src/main.c ****   {
 131              		.loc 1 152 7 is_stmt 0 view .LVU35
 132 003e 0021     		movs	r1, #0
 133 0040 6846     		mov	r0, sp
 134 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 135              	.LVL3:
 152:Core/Src/main.c ****   {
 136              		.loc 1 152 6 view .LVU36
 137 0046 0028     		cmp	r0, #0
 138 0048 03D1     		bne	.L7
 156:Core/Src/main.c **** 
 139              		.loc 1 156 1 view .LVU37
 140 004a 10B0     		add	sp, sp, #64
 141              		@ sp needed
 142 004c 10BD     		pop	{r4, pc}
 143              	.L6:
 141:Core/Src/main.c ****   }
 144              		.loc 1 141 5 is_stmt 1 view .LVU38
 145 004e FFF7FEFF 		bl	Error_Handler
 146              	.LVL4:
 147              	.L7:
 154:Core/Src/main.c ****   }
 148              		.loc 1 154 5 view .LVU39
 149 0052 FFF7FEFF 		bl	Error_Handler
 150              	.LVL5:
 151              		.cfi_endproc
 152              	.LFE41:
 154              		.section	.text.adc_set_channel,"ax",%progbits
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 10


 155              		.align	1
 156              		.global	adc_set_channel
 157              		.syntax unified
 158              		.code	16
 159              		.thumb_func
 161              	adc_set_channel:
 162              	.LVL6:
 163              	.LFB42:
 159:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 164              		.loc 1 159 35 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 16
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 159:Core/Src/main.c ****     ADC_ChannelConfTypeDef sConfig = {0};
 168              		.loc 1 159 35 is_stmt 0 view .LVU41
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 84B0     		sub	sp, sp, #16
 174              		.cfi_def_cfa_offset 24
 175 0004 0400     		movs	r4, r0
 160:Core/Src/main.c **** 
 176              		.loc 1 160 5 is_stmt 1 view .LVU42
 160:Core/Src/main.c **** 
 177              		.loc 1 160 28 is_stmt 0 view .LVU43
 178 0006 0C22     		movs	r2, #12
 179 0008 0021     		movs	r1, #0
 180 000a 01A8     		add	r0, sp, #4
 181              	.LVL7:
 160:Core/Src/main.c **** 
 182              		.loc 1 160 28 view .LVU44
 183 000c FFF7FEFF 		bl	memset
 184              	.LVL8:
 162:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 185              		.loc 1 162 5 is_stmt 1 view .LVU45
 162:Core/Src/main.c ****       sConfig.Channel = ADC_CHANNEL_5;
 186              		.loc 1 162 8 is_stmt 0 view .LVU46
 187 0010 002C     		cmp	r4, #0
 188 0012 0FD0     		beq	.L9
 163:Core/Src/main.c ****     } else {
 189              		.loc 1 163 7 is_stmt 1 view .LVU47
 163:Core/Src/main.c ****     } else {
 190              		.loc 1 163 23 is_stmt 0 view .LVU48
 191 0014 0523     		movs	r3, #5
 192 0016 0193     		str	r3, [sp, #4]
 193              	.L10:
 167:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 194              		.loc 1 167 5 is_stmt 1 view .LVU49
 167:Core/Src/main.c ****     sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 195              		.loc 1 167 18 is_stmt 0 view .LVU50
 196 0018 8023     		movs	r3, #128
 197 001a 5B01     		lsls	r3, r3, #5
 198 001c 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 199              		.loc 1 168 5 is_stmt 1 view .LVU51
 168:Core/Src/main.c ****     if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 11


 200              		.loc 1 168 26 is_stmt 0 view .LVU52
 201 001e 8023     		movs	r3, #128
 202 0020 5B05     		lsls	r3, r3, #21
 203 0022 0393     		str	r3, [sp, #12]
 169:Core/Src/main.c ****     {
 204              		.loc 1 169 5 is_stmt 1 view .LVU53
 169:Core/Src/main.c ****     {
 205              		.loc 1 169 9 is_stmt 0 view .LVU54
 206 0024 0648     		ldr	r0, .L13
 207 0026 01A9     		add	r1, sp, #4
 208 0028 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 209              	.LVL9:
 169:Core/Src/main.c ****     {
 210              		.loc 1 169 8 view .LVU55
 211 002c 0028     		cmp	r0, #0
 212 002e 04D1     		bne	.L12
 173:Core/Src/main.c **** /* USER CODE END 4 */
 213              		.loc 1 173 1 view .LVU56
 214 0030 04B0     		add	sp, sp, #16
 215              		@ sp needed
 216 0032 10BD     		pop	{r4, pc}
 217              	.L9:
 165:Core/Src/main.c ****     }
 218              		.loc 1 165 7 is_stmt 1 view .LVU57
 165:Core/Src/main.c ****     }
 219              		.loc 1 165 23 is_stmt 0 view .LVU58
 220 0034 0623     		movs	r3, #6
 221 0036 0193     		str	r3, [sp, #4]
 222 0038 EEE7     		b	.L10
 223              	.L12:
 171:Core/Src/main.c ****     }
 224              		.loc 1 171 7 is_stmt 1 view .LVU59
 225 003a FFF7FEFF 		bl	Error_Handler
 226              	.LVL10:
 227              	.L14:
 228 003e C046     		.align	2
 229              	.L13:
 230 0040 00000000 		.word	hadc
 231              		.cfi_endproc
 232              	.LFE42:
 234              		.section	.text.main,"ax",%progbits
 235              		.align	1
 236              		.global	main
 237              		.syntax unified
 238              		.code	16
 239              		.thumb_func
 241              	main:
 242              	.LFB40:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 243              		.loc 1 67 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 12


 251              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 252              		.loc 1 75 3 view .LVU61
 253 0002 FFF7FEFF 		bl	HAL_Init
 254              	.LVL11:
  82:Core/Src/main.c **** 
 255              		.loc 1 82 3 view .LVU62
 256 0006 FFF7FEFF 		bl	SystemClock_Config
 257              	.LVL12:
  89:Core/Src/main.c ****   MX_ADC_Init();
 258              		.loc 1 89 3 view .LVU63
 259 000a FFF7FEFF 		bl	MX_GPIO_Init
 260              	.LVL13:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 261              		.loc 1 90 3 view .LVU64
 262 000e FFF7FEFF 		bl	MX_ADC_Init
 263              	.LVL14:
 264 0012 15E0     		b	.L19
 265              	.L17:
 266              	.LBB6:
 111:Core/Src/main.c ****       channel = 0;
 267              		.loc 1 111 7 view .LVU65
 268 0014 0022     		movs	r2, #0
 269 0016 8021     		movs	r1, #128
 270 0018 1A48     		ldr	r0, .L20
 271 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 272              	.LVL15:
 112:Core/Src/main.c ****     }
 273              		.loc 1 112 7 view .LVU66
 112:Core/Src/main.c ****     }
 274              		.loc 1 112 15 is_stmt 0 view .LVU67
 275 001e 1A4B     		ldr	r3, .L20+4
 276 0020 0022     		movs	r2, #0
 277 0022 1A70     		strb	r2, [r3]
 278              	.L18:
 114:Core/Src/main.c ****     HAL_Delay(5000);
 279              		.loc 1 114 5 is_stmt 1 view .LVU68
 280 0024 174C     		ldr	r4, .L20
 281 0026 0122     		movs	r2, #1
 282 0028 0121     		movs	r1, #1
 283 002a 2000     		movs	r0, r4
 284 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 285              	.LVL16:
 115:Core/Src/main.c ****     HAL_GPIO_WritePin(LED0_GPIO_Port,LED0_Pin,RESET);
 286              		.loc 1 115 5 view .LVU69
 287 0030 1648     		ldr	r0, .L20+8
 288 0032 FFF7FEFF 		bl	HAL_Delay
 289              	.LVL17:
 116:Core/Src/main.c ****   }
 290              		.loc 1 116 5 view .LVU70
 291 0036 0022     		movs	r2, #0
 292 0038 0121     		movs	r1, #1
 293 003a 2000     		movs	r0, r4
 294 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 295              	.LVL18:
 296              	.LBE6:
  97:Core/Src/main.c ****   {
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 13


 297              		.loc 1 97 9 view .LVU71
 298              	.L19:
  97:Core/Src/main.c ****   {
 299              		.loc 1 97 3 view .LVU72
 300              	.LBB7:
 102:Core/Src/main.c ****     HAL_Delay(1);
 301              		.loc 1 102 5 view .LVU73
 302 0040 114B     		ldr	r3, .L20+4
 303 0042 1878     		ldrb	r0, [r3]
 304 0044 FFF7FEFF 		bl	adc_set_channel
 305              	.LVL19:
 103:Core/Src/main.c ****     HAL_ADC_Start(&hadc);
 306              		.loc 1 103 5 view .LVU74
 307 0048 0120     		movs	r0, #1
 308 004a FFF7FEFF 		bl	HAL_Delay
 309              	.LVL20:
 104:Core/Src/main.c ****     while(HAL_ADC_PollForConversion(&hadc,5)!= HAL_OK);
 310              		.loc 1 104 5 view .LVU75
 311 004e 1048     		ldr	r0, .L20+12
 312 0050 FFF7FEFF 		bl	HAL_ADC_Start
 313              	.LVL21:
 105:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 314              		.loc 1 105 5 view .LVU76
 315              	.L16:
 105:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 316              		.loc 1 105 45 discriminator 1 view .LVU77
 105:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 317              		.loc 1 105 11 is_stmt 0 discriminator 1 view .LVU78
 318 0054 0E48     		ldr	r0, .L20+12
 319 0056 0521     		movs	r1, #5
 320 0058 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 321              	.LVL22:
 105:Core/Src/main.c ****     adc_value = HAL_ADC_GetValue(&hadc);
 322              		.loc 1 105 45 discriminator 1 view .LVU79
 323 005c 0028     		cmp	r0, #0
 324 005e F9D1     		bne	.L16
 106:Core/Src/main.c ****     if(channel == 0) {
 325              		.loc 1 106 5 is_stmt 1 view .LVU80
 106:Core/Src/main.c ****     if(channel == 0) {
 326              		.loc 1 106 17 is_stmt 0 view .LVU81
 327 0060 0B48     		ldr	r0, .L20+12
 328 0062 FFF7FEFF 		bl	HAL_ADC_GetValue
 329              	.LVL23:
 106:Core/Src/main.c ****     if(channel == 0) {
 330              		.loc 1 106 15 view .LVU82
 331 0066 0B4B     		ldr	r3, .L20+16
 332 0068 1880     		strh	r0, [r3]
 107:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 333              		.loc 1 107 5 is_stmt 1 view .LVU83
 107:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 334              		.loc 1 107 16 is_stmt 0 view .LVU84
 335 006a 074B     		ldr	r3, .L20+4
 336 006c 1B78     		ldrb	r3, [r3]
 107:Core/Src/main.c ****       HAL_GPIO_WritePin(LED7_GPIO_Port,LED7_Pin,SET);
 337              		.loc 1 107 7 view .LVU85
 338 006e 002B     		cmp	r3, #0
 339 0070 D0D1     		bne	.L17
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 14


 108:Core/Src/main.c ****       channel = 1;
 340              		.loc 1 108 7 is_stmt 1 view .LVU86
 341 0072 0122     		movs	r2, #1
 342 0074 8021     		movs	r1, #128
 343 0076 0348     		ldr	r0, .L20
 344 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 345              	.LVL24:
 109:Core/Src/main.c ****     } else {
 346              		.loc 1 109 7 view .LVU87
 109:Core/Src/main.c ****     } else {
 347              		.loc 1 109 15 is_stmt 0 view .LVU88
 348 007c 024B     		ldr	r3, .L20+4
 349 007e 0122     		movs	r2, #1
 350 0080 1A70     		strb	r2, [r3]
 351 0082 CFE7     		b	.L18
 352              	.L21:
 353              		.align	2
 354              	.L20:
 355 0084 00040048 		.word	1207960576
 356 0088 00000000 		.word	channel
 357 008c 88130000 		.word	5000
 358 0090 00000000 		.word	hadc
 359 0094 00000000 		.word	adc_value
 360              	.LBE7:
 361              		.cfi_endproc
 362              	.LFE40:
 364              		.global	channel
 365              		.section	.bss.channel,"aw",%nobits
 368              	channel:
 369 0000 00       		.space	1
 370              		.global	adc_value
 371              		.section	.bss.adc_value,"aw",%nobits
 372              		.align	1
 375              	adc_value:
 376 0000 0000     		.space	2
 377              		.text
 378              	.Letext0:
 379              		.file 3 "c:\\users\\justi\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 380              		.file 4 "c:\\users\\justi\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 381              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 382              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 383              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 384              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 385              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 386              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 387              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 388              		.file 12 "Core/Inc/adc.h"
 389              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 390              		.file 14 "Core/Inc/gpio.h"
 391              		.file 15 "<built-in>"
ARM GAS  C:\Users\justi\AppData\Local\Temp\ccZcaofH.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:19     .text.Error_Handler:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:25     .text.Error_Handler:00000000 Error_Handler
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:57     .text.SystemClock_Config:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:63     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:155    .text.adc_set_channel:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:161    .text.adc_set_channel:00000000 adc_set_channel
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:230    .text.adc_set_channel:00000040 $d
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:235    .text.main:00000000 $t
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:241    .text.main:00000000 main
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:355    .text.main:00000084 $d
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:368    .bss.channel:00000000 channel
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:375    .bss.adc_value:00000000 adc_value
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:369    .bss.channel:00000000 $d
C:\Users\justi\AppData\Local\Temp\ccZcaofH.s:372    .bss.adc_value:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_ConfigChannel
hadc
HAL_Init
MX_GPIO_Init
MX_ADC_Init
HAL_GPIO_WritePin
HAL_Delay
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
